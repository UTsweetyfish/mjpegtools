Description: Disable SSE in-line optimizations.
---
 yuvdenoise/main.c |   12 +++---------
 1 file changed, 3 insertions(+), 9 deletions(-)

--- mjpegtools.orig/yuvdenoise/main.c
+++ mjpegtools/yuvdenoise/main.c
@@ -28,12 +28,6 @@
 #include "cpu_accel.h"
 #include "motionsearch.h"
 
-#if defined(__SSE3__)
-# include <pmmintrin.h>
-#elif defined(__SSE2__)
-# include <emmintrin.h>
-#endif
-
 int verbose = 1;
 int width = 0;
 int height = 0;
@@ -447,7 +441,7 @@ for(i=0;i<(w*h);i++)
 	*(frame+i)=(*(frame+i)*(255-level)+random[i&8191]*level)/255;
 }
 
-#if defined(__SSE2__)
+#if 0
 
 static inline __m128i tf0(const __m128i mask, const __m128i l0, const __m128i vt, const __m128i vc, const __m128i vb) {
 	__m128i k0, k1, k2, k3, d0; /* temp storage, pixel surroundings, 16-bit words */
@@ -806,7 +800,7 @@ void temporal_filter_planes_p (int idx,
 	}
 }
 
-#if defined(__SSE2__)
+#if 0
 /* 4 to 5 times faster */
 void filter_plane_median_sse2(uint8_t *plane, int w, int h, int level) {
 	int i;
@@ -1328,7 +1322,7 @@ static void init_accel() {
 	temporal_filter_planes = temporal_filter_planes_p;
 	uint32_t tmp;
 
-#if defined(__SSE2__)
+#if 0
 	int d = 0;
 /*	__asm__ volatile("cpuid" : "=d"(d) : "a"(1) : "ebx", "ecx"); */
 	__asm__ volatile("movl %%ebx, %1; cpuid; movl %1, %%ebx" : "=d"(d), "=&g"(tmp) : "a"(1) : "ecx");
